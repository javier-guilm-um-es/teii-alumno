name: CI/CD for teii Package

# Controls when the action will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs called "test-package" and "build-and-publish-package"

  test-package:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v2

    # Sets up python version
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    # Installs tox
    - name: Install tox y tox-wheel
      run: |
        pip install tox tox-wheel

    # Runs tox
    - name: Run flake8, mypy and pytest with tox
      run: |
        tox -e py

  build-and-publish-package:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: test-package

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v2

    # Sets up python version
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    # Builds the package
    - name: Build package
      run: |
        pip install setuptools wheel
        python setup.py bdist_wheel

    # Publishes the package to TestPypi
    - name: Publish package
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_TESTPYPI_TOKEN }}
        TWINE_REPOSITORY: testpypi
      run: |
          pip install twine
          python3 -m twine upload dist/*